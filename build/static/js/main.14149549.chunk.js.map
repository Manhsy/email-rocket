{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","App","classes","useState","email","setEmail","emailList","setEmailList","password","setPassword","subject","setSubject","message","setMessage","style","textAlign","marginTop","Typography","variant","TextField","id","label","value","onChange","e","target","type","autoComplete","placeholder","multiline","helperText","length","error","Paper","elevation","width","padding","Button","color","className","startIcon","onClick","document","getElementById","click","hidden","event","file","files","reader","FileReader","onload","result","split","map","trim","readAsText","endIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14149549.chunk.js","sourcesContent":["import { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [password, setPassword] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const fileSelectHandler = (event) => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      setEmailList(e.target.result.split(\"\\n\").map((email) => email.trim()));\n    };\n  \n    reader.readAsText(file);\n  };\n  return <div style={{ textAlign: \"center\", marginTop: 40}}>\n    <Typography variant=\"h2\">Email Rocket ðŸš€</Typography>\n\n    <form style= {{marginTop: 30}}>\n      <TextField \n        id=\"standard-basic\" \n        label=\"Email\" \n        value = {email}\n        onChange = {(e) => setEmail(e.target.value)}/>\n      <br/>  \n      \n      <TextField \n        style={{ marginTop: 20 }}id=\"standard-password-input\"\n          label=\"Password\"\n          value = {password}\n          onChange = {(e) => setPassword(e.target.value)}\n          type=\"password\"\n          autoComplete=\"current-password\" />\n\n        <br/>\n        <TextField \n          style={{ marginTop: 20 }}\n          id=\"standard-textarea\"\n          label=\"Subject\"\n          value = {subject}\n          onChange = {(e) => setSubject(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline\n        />\n        <br/>\n        <TextField \n          style={{ marginTop: 10 }}\n          id=\"standard-textarea\"\n          label=\"Message\"\n          value = {message}\n          onChange = {(e) => setMessage(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline\n          helperText={`Character count: ${message.length}`}\n          error = {message.length>=1000}\n        />\n        <br/>\n    </form>\n    <Paper elevation={3} style={{ width: \"20%\", margin: \"auto\", marginTop: 20, padding: 20 }}>\n      <Typography variant=\"subtitle1\">Upload .txt file of emails (format: an email per line)</Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<CloudUploadIcon />}\n        onClick={() => document.getElementById(\"selectFile\").click()}\n        >\n        Upload\n      </Button>\n      <br/>\n      <input\n        id=\"selectFile\"\n        hidden\n        type=\"file\"\n        onChange={fileSelectHandler}\n      />\n\n      {emailList.length > 0 && (\n      <Typography variant=\"subtitle2\" style={{ marginTop: 20 }}>\n        Email list loaded: {emailList.length}\n      </Typography>\n    )}\n\n    <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        endIcon={<SendIcon></SendIcon>}\n      >\n        Send\n      </Button>\n    </Paper>\n\n    </div>; \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}