{"ast":null,"code":"var _jsxFileName = \"/Users/manhsy/Developer/email-rocket/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport * as EmailValidator from 'email-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [password, setPassword] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const fileSelectHandler = event => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      setEmailList(e.target.result.split(\"\\n\").map(email => email.trim()));\n    };\n\n    reader.readAsText(file);\n  };\n\n  const hasValidInput = () => {\n    return email.length > 0 && emailList.length > 0 && password.length > 0 && subject.length > 0 && message.length > 0 && message.length < 1000 && validEmails();\n  };\n\n  const validEmails = () => {\n    for (var i = 0; i < emailList.length; i++) {\n      if (!EmailValidator.validate(emailList[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Email Rocket \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          marginTop: 20\n        },\n        id: \"standard-password-input\",\n        label: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          marginTop: 20\n        },\n        id: \"standard-textarea\",\n        label: \"Subject\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        placeholder: \"Placeholder\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          marginTop: 10\n        },\n        id: \"standard-textarea\",\n        label: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Placeholder\",\n        multiline: true,\n        helperText: `Character count: ${message.length}`,\n        error: message.length >= 1000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        width: \"20%\",\n        margin: \"auto\",\n        marginTop: 20,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Upload .txt file of emails (format: an email per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }, this),\n        onClick: () => document.getElementById(\"selectFile\").click(),\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"selectFile\",\n        hidden: true,\n        type: \"file\",\n        onChange: fileSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), emailList.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        style: {\n          marginTop: 20\n        },\n        children: [\"Email list loaded: \", emailList.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 18\n        }, this),\n        disabled: !hasValidInput(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"5j2ov+XvKLHAcWw0gd7PU9P4Ul0=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manhsy/Developer/email-rocket/src/App.js"],"names":["Typography","TextField","Paper","Button","useState","CloudUploadIcon","makeStyles","SendIcon","EmailValidator","useStyles","theme","button","margin","spacing","App","classes","email","setEmail","emailList","setEmailList","password","setPassword","subject","setSubject","message","setMessage","fileSelectHandler","event","file","target","files","reader","FileReader","onload","e","result","split","map","trim","readAsText","hasValidInput","length","validEmails","i","validate","textAlign","marginTop","value","width","padding","document","getElementById","click"],"mappings":"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","sourcesContent":["import { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport * as EmailValidator from 'email-validator';\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [password, setPassword] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const fileSelectHandler = (event) => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      setEmailList(e.target.result.split(\"\\n\").map((email) => email.trim()));\n    };\n  \n    reader.readAsText(file);\n  };\n\n  const hasValidInput = () => {\n    return (\n      email.length > 0 &&\n      emailList.length > 0 &&\n      password.length > 0 &&\n      subject.length > 0 &&\n      message.length > 0 &&\n      message.length < 1000 && \n      validEmails()\n    );\n  };\n  const validEmails = () => {\n    for(var i = 0; i < emailList.length; i++){\n        if(!EmailValidator.validate(emailList[i])){\n            return false;\n        }\n    }\n    return true;\n  }\n  return <div style={{ textAlign: \"center\", marginTop: 40}}>\n    <Typography variant=\"h2\">Email Rocket 🚀</Typography>\n\n    <form style= {{marginTop: 30}}>\n      <TextField \n        id=\"standard-basic\" \n        label=\"Email\" \n        value = {email}\n        onChange = {(e) => setEmail(e.target.value)}/>\n      <br/>  \n      \n      <TextField \n        style={{ marginTop: 20 }}id=\"standard-password-input\"\n          label=\"Password\"\n          value = {password}\n          onChange = {(e) => setPassword(e.target.value)}\n          type=\"password\"\n          autoComplete=\"current-password\" />\n\n        <br/>\n        <TextField \n          style={{ marginTop: 20 }}\n          id=\"standard-textarea\"\n          label=\"Subject\"\n          value = {subject}\n          onChange = {(e) => setSubject(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline\n        />\n        <br/>\n        <TextField \n          style={{ marginTop: 10 }}\n          id=\"standard-textarea\"\n          label=\"Message\"\n          value = {message}\n          onChange = {(e) => setMessage(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline\n          helperText={`Character count: ${message.length}`}\n          error = {message.length>=1000}\n        />\n        <br/>\n    </form>\n    <Paper elevation={3} style={{ width: \"20%\", margin: \"auto\", marginTop: 20, padding: 20 }}>\n      <Typography variant=\"subtitle1\">Upload .txt file of emails (format: an email per line)</Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<CloudUploadIcon />}\n        onClick={() => document.getElementById(\"selectFile\").click()}\n        >\n        Upload\n      </Button>\n      <br/>\n      <input\n        id=\"selectFile\"\n        hidden\n        type=\"file\"\n        onChange={fileSelectHandler}\n      />\n\n      {emailList.length > 0 && (\n      <Typography variant=\"subtitle2\" style={{ marginTop: 20 }}>\n        Email list loaded: {emailList.length}\n      </Typography>\n    )}\n\n    <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        endIcon={<SendIcon></SendIcon>}        \n        disabled={!hasValidInput()}\n      >\n        Send\n      </Button>\n    </Paper>\n\n    </div>; \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}