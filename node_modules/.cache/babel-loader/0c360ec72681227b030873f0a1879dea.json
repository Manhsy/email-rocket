{"ast":null,"code":"var _jsxFileName = \"/Users/manhsy/Developer/email-rocket/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport desktopImage from './augustine-wong-li0iC0rjvvg-unsplash.jpg';\nimport * as EmailValidator from 'email-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nasync function handleSubmit(name, email, password, subject, message, emailList) {\n  console.log(email);\n  console.log(password);\n  console.log(subject);\n  console.log(message);\n  console.log(emailList);\n  const result = await axios.post('https://email-rocket.netlify.app/.netlify/functions/email', {\n    \"email\": email,\n    \"password\": password,\n    \"subject\": subject,\n    \"body\": message,\n    \"emailList\": emailList\n  });\n  console.log(result);\n}\n\nfunction App() {\n  _s();\n\n  const imageUrl = desktopImage;\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [password, setPassword] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n\n  const fileSelectHandler = event => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      setEmailList(e.target.result.split(\"\\n\").map(email => email.trim()));\n    };\n\n    reader.readAsText(file);\n  };\n\n  const hasValidInput = () => {\n    return email.length > 0 && emailList.length > 0 && password.length > 0 && subject.length > 0 && message.length > 0 && message.length < 1000 && emailList.every(email => EmailValidator.validate(email));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 40,\n      backgroundImage: `url(${imageUrl})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: \"Email Rocket \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"inherit\",\n      children: \"Ever wanted to send the same email to multiple receiver? Email Rocket is here for you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 137\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        marginTop: 20\n      },\n      id: \"standard-basic\",\n      label: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        marginTop: 20\n      },\n      id: \"standard-password-input\",\n      label: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      autoComplete: \"current-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        marginTop: 20\n      },\n      id: \"standard-textarea\",\n      label: \"Subject\",\n      value: subject,\n      onChange: e => setSubject(e.target.value),\n      placeholder: \"Placeholder\",\n      multiline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        marginTop: 10\n      },\n      id: \"standard-textarea\",\n      label: \"Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Placeholder\",\n      multiline: true,\n      helperText: `Character count: ${message.length}`,\n      error: message.length >= 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        width: \"100%\",\n        margin: \"auto\",\n        marginTop: 20,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Upload .txt file of emails (format: an email per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 20\n        }, this),\n        onClick: () => document.getElementById(\"selectFile\").click(),\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"selectFile\",\n        hidden: true,\n        type: \"file\",\n        onChange: fileSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), emailList.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        style: {\n          marginTop: 20\n        },\n        children: hasValidInput() ? `Emails Loaded: ${emailList.length}` : \"Error parsing email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }, this),\n        disabled: !hasValidInput(),\n        onClick: async () => await handleSubmit(email, password, subject, message, emailList),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"lDJ3f9Q3VUDkSA4Q1HMP5D2jlxY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manhsy/Developer/email-rocket/src/App.js"],"names":["React","Typography","TextField","Paper","Button","useState","CloudUploadIcon","makeStyles","SendIcon","desktopImage","EmailValidator","axios","require","useStyles","theme","button","margin","spacing","handleSubmit","name","email","password","subject","message","emailList","console","log","result","post","App","imageUrl","classes","setName","setEmail","setEmailList","setPassword","setSubject","setMessage","fileSelectHandler","event","file","target","files","reader","FileReader","onload","e","split","map","trim","readAsText","hasValidInput","length","every","validate","textAlign","marginTop","backgroundImage","value","width","padding","document","getElementById","click"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport { useState } from \"react\"\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport desktopImage from './augustine-wong-li0iC0rjvvg-unsplash.jpg';\nimport * as EmailValidator from 'email-validator';\n\nconst axios = require('axios');\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nasync function handleSubmit(name, email, password, subject, message, emailList){\n  console.log(email);\n  console.log(password);\n  console.log(subject);\n  console.log(message);\n  console.log(emailList);\n  const result = await axios.post('https://email-rocket.netlify.app/.netlify/functions/email', {\n            \"email\" : email,\n            \"password\" : password,\n            \"subject\" : subject,\n            \"body\" : message,\n            \"emailList\" : emailList\n          })\n  console.log(result);\n\n}\nfunction App() {\n  const imageUrl = desktopImage;\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailList, setEmailList] = useState([]);\n  const [password, setPassword] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const fileSelectHandler = (event) => {\n    let file = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = function (e) {\n      // The file's text will be printed here\n      setEmailList(e.target.result.split(\"\\n\").map((email) => email.trim()));\n    };\n  \n    reader.readAsText(file);\n  };\n  const hasValidInput = () => {\n    return (\n      email.length > 0 &&\n      emailList.length > 0 &&\n      password.length > 0 &&\n      subject.length > 0 &&\n      message.length > 0 &&\n      message.length < 1000 && \n      emailList.every((email) => EmailValidator.validate(email))\n    );\n  };\n\n  return <div style={{textAlign: \"center\", marginTop: 40, backgroundImage: `url(${imageUrl})` }}>\n\n      <Typography variant=\"h2\">Email Rocket 🚀</Typography>\n      <Typography variant=\"inherit\">Ever wanted to send the same email to multiple receiver? Email Rocket is here for you!</Typography> <br/>  \n\n        <TextField \n          style={{ marginTop: 20 }}\n          id=\"standard-basic\" \n          label=\"Email\" \n          value = {email}\n          onChange = {(e) => setEmail(e.target.value)}/>\n        <br/>  \n        \n        <TextField \n            style={{ marginTop: 20 }}\n            id=\"standard-password-input\"\n            label=\"Password\"\n            value = {password}\n            onChange = {(e) => setPassword(e.target.value)}\n            type=\"password\"\n            autoComplete=\"current-password\" />\n        <br/>\n        <TextField \n          style={{ marginTop: 20 }}\n          id=\"standard-textarea\"\n          label=\"Subject\"\n          value = {subject}\n          onChange = {(e) => setSubject(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline/>\n        <br/>\n        <TextField \n          style={{ marginTop: 10 }}\n          id=\"standard-textarea\"\n          label=\"Message\"\n          value = {message}\n          onChange = {(e) => setMessage(e.target.value)}\n          placeholder=\"Placeholder\"\n          multiline\n          helperText={`Character count: ${message.length}`}\n          error = {message.length>=1000}\n        />\n        <br/>\n\n    <Paper elevation={3} style={{ width: \"100%\", margin: \"auto\", marginTop: 20, padding: 20 }}>\n      <Typography variant=\"subtitle1\">Upload .txt file of emails (format: an email per line)</Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<CloudUploadIcon />}\n        onClick={() => document.getElementById(\"selectFile\").click()}\n        >\n        Upload\n      </Button>\n      <br/>\n      <input\n        id=\"selectFile\"\n        hidden\n        type=\"file\"\n        onChange={fileSelectHandler}/>\n\n      {emailList.length > 0 && (\n      <Typography variant=\"subtitle2\" style={{ marginTop: 20 }}>\n        {hasValidInput() ? `Emails Loaded: ${emailList.length}` : \"Error parsing email\"}\n      </Typography>\n    )}\n\n    <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        endIcon={<SendIcon></SendIcon>}        \n        disabled={!hasValidInput()}\n        onClick= {async () => await handleSubmit(email, password, subject, message, emailList)}\n      >\n        Send\n      </Button>\n\n    </Paper>\n\n    </div>; \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}